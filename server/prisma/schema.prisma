// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model users {
  id           Int            @id @default(autoincrement())
  first_name   String         @db.VarChar(30)
  last_name    String         @db.VarChar(30)
  email        String         @unique @db.VarChar(30)
  type_of_rol  Boolean
  password     String         @db.VarChar(500)
  clients      clients[]      @relation(name: "clientsTousers")
  super_admins super_admins[] @relation(name: "super_adminsTousers")
}

model super_admins {
  users    users    @relation(name: "super_adminsTousers", fields: [userId], references: [id])
  userId   Int
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(30)
  lastname String   @db.VarChar(30)
  admins   admins[] @relation(name: "adminsTousers")
}

model admins {
  super_admins  super_admins @relation(name: "adminsTousers", fields: [super_adminId], references: [id])
  super_adminId Int
  id            Int          @id @default(autoincrement())
  name          String       @db.VarChar(30)
  lastname      String       @db.VarChar(30)
}

model clients {
  users         users       @relation(name: "clientsTousers", fields: [userId], references: [id])
  userId        Int
  id            Int         @id @default(autoincrement())
  name          String      @db.VarChar(30)
  lastname      String      @db.VarChar(30)
  qualification String      @db.VarChar(30)
  department    String      @db.VarChar(30)
  company       String      @db.VarChar(30)
  telephone     Int
  address       String      @db.VarChar(100)
  postal_code   Int
  city          String      @db.VarChar(30)
  comments      String      @db.Text
  offers        offers[]    @relation(name: "clientsTooffers")
  reports       reports[]   @relation(name: "clientsToreports")
  sectors       sectors[]   @relation(name: "clientsTosectors")
  countries     countries[] @relation(name: "clientsTocountries")
  equiment      equiment[]  @relation(name: "clientsToequipment")
}

model sectors {
  clients    clients      @relation(name: "clientsTosectors", fields: [clientId], references: [id])
  clientId   Int
  id         Int          @id @default(autoincrement())
  sector     String       @db.VarChar(30)
  subsectors subsectors[] @relation(name: "sectorsTosubsectors")
}

model subsectors {
  sectors   sectors @relation(name: "sectorsTosubsectors", fields: [sectorId], references: [id])
  sectorId  Int
  id        Int     @id @default(autoincrement())
  subsector String  @db.VarChar(30)
}

model countries {
  clients   clients @relation(name: "clientsTocountries", fields: [clientId], references: [id])
  clientId  Int
  id        Int     @id @default(autoincrement())
  conuntrie String  @db.VarChar(30)
}

model offers {
  clients       clients        @relation(name: "clientsTooffers", fields: [clientId], references: [id])
  clientId      Int
  id            Int            @id @default(autoincrement())
  code          Int
  expected_date DateTime       @db.Date
  place         String         @db.VarChar(30)
  importance    Int
  comments      String         @db.Text
  title         String         @db.VarChar(30)
  subsidiaries  subsidiaries[] @relation(name: "offersTosubsidiaries")
  commercials   commercials[]  @relation(name: "commercialsTooffers")
  offerings     offerings[]    @relation(name: "offeringsTooffers")
  origins       origins[]      @relation(name: "offersToorigins")
  states        states[]       @relation(name: "offersTostates")
  types         types[]        @relation(name: "offersTotypes")
  odds          odds[]         @relation(name: "oddsTooffers")
  values        values[]       @relation(name: "offersTovalues")
  who           who[]          @relation(name: "offersTowho")
}

model subsidiaries {
  offers     offers @relation(name: "offersTosubsidiaries", fields: [offerId], references: [id])
  offerId    Int
  id         Int    @id @default(autoincrement())
  subsidiary String @db.VarChar(30)
}

model commercials {
  offers     offers @relation(name: "commercialsTooffers", fields: [offerId], references: [id])
  offerId    Int
  id         Int    @id @default(autoincrement())
  commercial String @db.VarChar(30)
}

model who {
  offers     offers @relation(name: "offersTowho", fields: [offerId], references: [id])
  offerId    Int
  id         Int    @id @default(autoincrement())
  commercial String @db.VarChar(30)
}

model offerings {
  offers   offers @relation(name: "offeringsTooffers", fields: [offerId], references: [id])
  offerId  Int
  id       Int    @id @default(autoincrement())
  offering String @db.VarChar(30)
}

model origins {
  offers  offers @relation(name: "offersToorigins", fields: [offerId], references: [id])
  offerId Int
  id      Int    @id @default(autoincrement())
  origin  String @db.VarChar(30)
}

model states {
  offers  offers @relation(name: "offersTostates", fields: [offerId], references: [id])
  offerId Int
  id      Int    @id @default(autoincrement())
  state   String @db.VarChar(30)
}

model types {
  offers  offers @relation(name: "offersTotypes", fields: [offerId], references: [id])
  offerId Int
  id      Int    @id @default(autoincrement())
  type    String @db.VarChar(30)
}

model odds {
  offers      offers @relation(name: "oddsTooffers", fields: [offerId], references: [id])
  offerId     Int
  id          Int    @id @default(autoincrement())
  probability Float
}

model values {
  offers  offers @relation(name: "offersTovalues", fields: [offerId], references: [id])
  offerId Int
  id      Int    @id @default(autoincrement())
  value   Int
}

model reports {
  clients   clients   @relation(name: "clientsToreports", fields: [clientId], references: [id])
  clientId  Int
  id        Int       @id @default(autoincrement())
  stand_by  String    @db.VarChar(100)
  date_year DateTime  @db.Date
  winners   winners[] @relation(name: "reportsTowinners")
  losers    losers[]  @relation(name: "losersToreports")
}

model winners {
  reports  reports @relation(name: "reportsTowinners", fields: [reportId], references: [id])
  reportId Int
  id       Int     @id @default(autoincrement())
  win      String  @db.VarChar(100)
}

model losers {
  reports  reports @relation(name: "losersToreports", fields: [reportId], references: [id])
  reportId Int
  id       Int     @id @default(autoincrement())
  lost     String  @db.VarChar(100)
}

model equiment {
  clients       clients    @relation(name: "clientsToequipment", fields: [clientId], references: [id])
  clientId      Int
  id            Int        @id @default(autoincrement())
  initial       String     @db.VarChar(30)
  stake         Boolean
  capacity      String     @db.VarChar(30)
  external      Boolean
  init_data     DateTime   @db.Date
  finaly_data   DateTime   @db.Date
  active_status Boolean
  profiles      profiles[] @relation(name: "equimentToprofiles")
  area          area[]     @relation(name: "equimentToarea")
}

model profiles {
  equiment   equiment @relation(name: "equimentToprofiles", fields: [teamId], references: [id])
  teamId     Int
  id         Int      @id @default(autoincrement())
  subsidiary String   @db.VarChar(30)
}

model area {
  equiment   equiment @relation(name: "equimentToarea", fields: [areaId], references: [id])
  areaId     Int
  id         Int      @id @default(autoincrement())
  subsidiary String   @db.VarChar(30)
}
